name: E2E Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM UTC
  workflow_dispatch:

jobs:
  playwright-tests:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/web/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: apps/web
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        working-directory: apps/web
        run: pnpm exec playwright install --with-deps chromium

      - name: Build frontend
        working-directory: apps/web
        run: pnpm run build

      - name: Start local services
        run: |
          docker compose -f infra/compose/docker-compose.yml up -d
          # Wait for backend services to be healthy (increased timeout for CI)
          timeout 180 bash -c 'until curl -f http://localhost:8080/healthz; do sleep 5; done' || echo "Backend not ready, tests may fail"
        continue-on-error: true

      - name: Start frontend dev server
        working-directory: apps/web
        run: |
          pnpm run preview &
          # Wait for frontend to be ready
          timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'

      - name: Run Playwright tests
        working-directory: apps/web
        env:
          VITE_API_BASE_URL: http://localhost:8080
          BASE_URL: http://localhost:4173
        run: pnpm exec playwright test
        continue-on-error: true  # Don't fail build on E2E test failures

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: apps/web/test-results/
          retention-days: 30

      - name: Cleanup
        if: always()
        run: docker compose -f infra/compose/docker-compose.yml down -v

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/web/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: apps/web
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        working-directory: apps/web
        run: pnpm run build

      - name: Run axe accessibility tests
        working-directory: apps/web
        run: |
          # Install axe-core CLI
          npm install -g @axe-core/cli

          # Serve the built app
          npx serve -s dist -p 3000 &
          SERVER_PID=$!

          # Wait for server
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

          # Run axe tests
          axe http://localhost:3000 --exit

          # Cleanup
          kill $SERVER_PID
        continue-on-error: true

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: apps/web/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: apps/web
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        working-directory: apps/web
        run: pnpm run build

      - name: Start local services
        run: |
          docker compose -f infra/compose/docker-compose.yml up -d
          # Wait for backend services to be healthy (increased timeout for CI)
          timeout 180 bash -c 'until curl -f http://localhost:8080/healthz; do sleep 5; done' || echo "Backend not ready, tests may fail"
        continue-on-error: true

      - name: Start frontend
        working-directory: apps/web
        run: |
          pnpm run preview &
          timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'

      - name: Run K6 load tests
        uses: grafana/k6-action@v0.3.1
        with:
          filename: tests/performance/load-test.js
        env:
          BASE_URL: http://localhost:8080
        continue-on-error: true

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:4173
          uploadArtifacts: false
          temporaryPublicStorage: true
        continue-on-error: true  # Don't fail build on Lighthouse issues

      - name: Cleanup
        if: always()
        run: docker compose -f infra/compose/docker-compose.yml down -v
